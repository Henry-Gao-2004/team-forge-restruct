generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider  = "postgresql"
  url       = env("POSTGRES_PRISMA_URL")
  directUrl = env("POSTGRES_URL_NON_POOLING")
}

model Entry {
  id        String   @id @default(uuid())
  createdAt DateTime @default(now())
  skills    String?
  interests String[]
  availability String[]
  relation String[] //id of students the user wants to work with.
  password  String
  email     String   @unique
  name      String
  title     String?
  classes   Class[] @relation("EntryClasses")//id of classes the user is in.
  projects  Project[] //id of projects the user owns
}

enum Skills {
  Java
  Python
  C
}

model Message {

  Messageid       String   @id @default(uuid())
  userID String
  datetime DateTime @default(now())
  recipientID String  
  message String
}

model Class{
  classID String @id @default(uuid())
  members Entry[] @relation("EntryClasses") //connects to records in Entry
  projects String[]
  title String
  subtitle String

}

model Project {
  projectID    String   @id @default(uuid())
  title        String
  description  String
  groupID      String   // Foreign key to Group model
  group        Group    @relation(fields: [groupID], references: [groupID])
  classID      String   // Foreign key to Class model
  class        Class    @relation(fields: [classID], references: [classID])
}

model Group{
  groupID String @id @default(uuid())
  memberIDs String[]
  meetingTimes String[]
  name String

}
model Preferences {

  id        String   @id @default(uuid())
  groupID String @unique
  interest Int
  skill Int
 
}